@model EasyBuy.Models.Order

@{
    ViewBag.Title = $"Chi tiết đơn hàng #{Model.OrderId}";
    Layout = "~/Views/Layout/_LayoutUser.cshtml";
}

@section Scripts {
    <script>
        // Print order function
        function printOrder() {
            window.print();
        }
        
        // Back to orders list
        function goBack() {
            window.history.back();
        }
        
        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            // Add fade-in animation
            const sections = document.querySelectorAll('.order-section');
            sections.forEach((section, index) => {
                section.style.animationDelay = `${index * 0.1}s`;
                section.classList.add('fade-in');
            });
        });
    </script>
    
    <style>
        .order-details-container {
            max-width: 900px;
            margin: 0 auto;
            padding: 2rem 1rem;
        }
        
        .order-header {
            background: white;
            padding: 2rem;
            border-radius: var(--border-radius-lg);
            box-shadow: var(--shadow);
            margin-bottom: 2rem;
            border: 1px solid var(--border-color);
            text-align: center;
            background: linear-gradient(135deg, #f8fafc, #e2e8f0);
        }
        
        .order-title {
            font-size: 2.5rem;
            font-weight: 800;
            color: var(--dark-color);
            margin-bottom: 0.5rem;
            background: var(--primary-gradient);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        .order-subtitle {
            font-size: 1.1rem;
            color: var(--text-muted);
            margin-bottom: 1.5rem;
        }
        
        .order-actions {
            display: flex;
            gap: 1rem;
            justify-content: center;
            flex-wrap: wrap;
        }
        
        .action-btn {
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: var(--border-radius);
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            text-decoration: none;
            font-size: 0.875rem;
        }
        
        .btn-primary {
            background: var(--primary-gradient);
            color: white;
        }
        
        .btn-outline {
            background: transparent;
            border: 2px solid var(--primary-color);
            color: var(--primary-color);
        }
        
        .btn-outline:hover {
            background: var(--primary-color);
            color: white;
            transform: translateY(-2px);
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-lg);
        }
        
        .order-section {
            background: white;
            padding: 2rem;
            border-radius: var(--border-radius-lg);
            box-shadow: var(--shadow);
            margin-bottom: 2rem;
            border: 1px solid var(--border-color);
            opacity: 0;
            transform: translateY(30px);
        }
        
        .section-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--dark-color);
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid var(--border-color);
        }
        
        .section-icon {
            width: 40px;
            height: 40px;
            background: var(--primary-gradient);
            border-radius: var(--border-radius);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.1rem;
        }
        
        /* Status Timeline */
        .status-timeline {
            position: relative;
            margin: 2rem 0;
        }
        
        .timeline-item {
            display: flex;
            align-items: center;
            margin-bottom: 1.5rem;
            position: relative;
        }
        
        .timeline-item:not(:last-child)::after {
            content: '';
            position: absolute;
            left: 20px;
            top: 45px;
            width: 2px;
            height: 30px;
            background: var(--border-color);
        }
        
        .timeline-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1rem;
            margin-right: 1rem;
            z-index: 1;
            background: var(--border-color);
        }
        
        .timeline-icon.active {
            background: var(--primary-gradient);
        }
        
        .timeline-icon.completed {
            background: #28a745;
        }
        
        .timeline-content {
            flex: 1;
        }
        
        .timeline-title {
            font-weight: 600;
            color: var(--dark-color);
            margin-bottom: 0.25rem;
        }
        
        .timeline-time {
            font-size: 0.875rem;
            color: var(--text-muted);
        }
        
        /* Order Info Grid */
        .order-info-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }
        
        .info-card {
            background: #f8fafc;
            padding: 1.5rem;
            border-radius: var(--border-radius);
            border: 1px solid var(--border-color);
        }
        
        .info-label {
            font-size: 0.875rem;
            color: var(--text-muted);
            margin-bottom: 0.5rem;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .info-value {
            font-size: 1.1rem;
            font-weight: 600;
            color: var(--dark-color);
            word-break: break-all;
        }
        
        .price-value {
            color: var(--primary-color);
            font-size: 1.2rem;
        }
        
        /* Products List */
        .products-list {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        
        .product-item {
            display: flex;
            align-items: center;
            padding: 1.5rem;
            background: #f8fafc;
            border-radius: var(--border-radius);
            margin-bottom: 1rem;
            border: 1px solid var(--border-color);
            transition: all 0.3s ease;
        }
        
        .product-item:hover {
            box-shadow: var(--shadow);
            transform: translateY(-2px);
        }
        
        .product-image {
            width: 80px;
            height: 80px;
            background: white;
            border-radius: var(--border-radius);
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1.5rem;
            border: 1px solid var(--border-color);
            overflow: hidden;
        }
        
        .product-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .product-image i {
            font-size: 2rem;
            color: var(--text-muted);
        }
        
        .product-info {
            flex: 1;
        }
        
        .product-name {
            font-size: 1.1rem;
            font-weight: 600;
            color: var(--dark-color);
            margin-bottom: 0.5rem;
        }
        
        .product-details {
            display: flex;
            gap: 2rem;
            font-size: 0.875rem;
            color: var(--text-muted);
        }
        
        .product-price {
            text-align: right;
            padding-left: 1rem;
        }
        
        .unit-price {
            font-size: 0.875rem;
            color: var(--text-muted);
            margin-bottom: 0.25rem;
        }
        
        .total-price {
            font-size: 1.2rem;
            font-weight: 700;
            color: var(--primary-color);
        }
        
        /* Order Summary */
        .order-summary {
            background: linear-gradient(135deg, #f8fafc, #e2e8f0);
            padding: 2rem;
            border-radius: var(--border-radius);
            border: 1px solid var(--border-color);
        }
        
        .summary-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem 0;
            border-bottom: 1px solid var(--border-color);
        }
        
        .summary-row:last-child {
            border-bottom: none;
            padding-top: 1rem;
            margin-top: 1rem;
            border-top: 2px solid var(--primary-color);
        }
        
        .summary-label {
            font-weight: 500;
            color: var(--dark-color);
        }
        
        .summary-value {
            font-weight: 600;
            color: var(--dark-color);
        }
        
        .summary-row:last-child .summary-label {
            font-size: 1.1rem;
            font-weight: 700;
        }
        
        .summary-row:last-child .summary-value {
            font-size: 1.3rem;
            font-weight: 800;
            color: var(--primary-color);
        }
        
        .status-badge {
            padding: 0.5rem 1rem;
            border-radius: var(--border-radius);
            font-weight: 600;
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .status-pending {
            background: #fff3cd;
            color: #856404;
            border: 1px solid #ffeaa7;
        }
        
        .status-confirmed {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        
        .status-shipping {
            background: #cce7ff;
            color: #004085;
            border: 1px solid #b3d7ff;
        }
        
        .status-delivered {
            background: #d1ecf1;
            color: #0c5460;
            border: 1px solid #bee5eb;
        }
        
        .status-cancelled {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f1b0b7;
        }
        
        .fade-in {
            animation: fadeInUp 0.6s ease-out forwards;
        }
        
        keyframes fadeInUp {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        /* Print styles */
        media print {
            .order-actions, .no-print {
                display: none !important;
            }
            
            .order-details-container {
                max-width: none;
                padding: 0;
            }
            
            .order-section {
                box-shadow: none;
                border: 1px solid #ddd;
                margin-bottom: 1rem;
            }
        }
        
        /* Responsive */
        media (max-width: 768px) {
            .order-info-grid {
                grid-template-columns: 1fr;
            }
            
            .product-item {
                flex-direction: column;
                text-align: center;
                gap: 1rem;
            }
            
            .product-details {
                justify-content: center;
            }
            
            .product-price {
                text-align: center;
                padding-left: 0;
            }
            
            .summary-row {
                flex-direction: column;
                gap: 0.5rem;
                text-align: center;
            }
            
            .order-actions {
                flex-direction: column;
            }
        }
    </style>
}

<div class="order-details-container">
    <!-- Order Header -->
    <div class="order-header order-section">
        <h1 class="order-title">
            <i class="fas fa-receipt me-3"></i>Đơn hàng #@Model.OrderId
        </h1>
        <p class="order-subtitle">Chi tiết và trạng thái đơn hàng của bạn</p>
        
        <div class="order-actions no-print">
            <button type="button" class="action-btn btn-outline" onclick="goBack()">
                <i class="fas fa-arrow-left"></i>Quay lại
            </button>
            <button type="button" class="action-btn btn-primary" onclick="printOrder()">
                <i class="fas fa-print"></i>In đơn hàng
            </button>
        </div>
    </div>

    <!-- Order Status Timeline -->
    <div class="order-section">
        <h2 class="section-title">
            <div class="section-icon">
                <i class="fas fa-route"></i>
            </div>
            Trạng thái đơn hàng
        </h2>
        
        <div class="status-timeline">
            <div class="timeline-item">
                <div class="timeline-icon completed">
                    <i class="fas fa-check"></i>
                </div>
                <div class="timeline-content">
                    <div class="timeline-title">Đặt hàng thành công</div>
                    <div class="timeline-time">@Model.CreatedAt?.ToString("dd/MM/yyyy HH:mm")</div>
                </div>
            </div>
            
            <div class="timeline-item">
                <div class="timeline-icon @(Model.Status != "Chờ xác nhận" ? "completed" : "active")">
                    <i class="fas @(Model.Status != "Chờ xác nhận" ? "fa-check" : "fa-clock")"></i>
                </div>
                <div class="timeline-content">
                    <div class="timeline-title">Xác nhận đơn hàng</div>
                    <div class="timeline-time">
                        @if (Model.Status != "Chờ xác nhận")
                        {
                            <span>Đã xác nhận</span>
                        }
                        else
                        {
                            <span>Đang chờ xác nhận...</span>
                        }
                    </div>
                </div>
            </div>
            
            <div class="timeline-item">
                <div class="timeline-icon @(Model.Status == "Đang giao" || Model.Status == "Đã giao" ? "completed" : Model.Status == "Đang giao" ? "active" : "")">
                    <i class="fas @(Model.Status == "Đang giao" || Model.Status == "Đã giao" ? "fa-check" : "fa-truck")"></i>
                </div>
                <div class="timeline-content">
                    <div class="timeline-title">Đang giao hàng</div>
                    <div class="timeline-time">
                        @if (Model.Status == "Đang giao")
                        {
                            <span>Đang trên đường giao...</span>
                        }
                        else if (Model.Status == "Đã giao")
                        {
                            <span>Đã hoàn thành</span>
                        }
                        else
                        {
                            <span>Chờ giao hàng</span>
                        }
                    </div>
                </div>
            </div>
            
            <div class="timeline-item">
                <div class="timeline-icon @(Model.Status == "Đã giao" ? "completed" : "")">
                    <i class="fas @(Model.Status == "Đã giao" ? "fa-check" : "fa-gift")"></i>
                </div>
                <div class="timeline-content">
                    <div class="timeline-title">Hoàn thành</div>
                    <div class="timeline-time">
                        @if (Model.Status == "Đã giao")
                        {
                            <span>Đã giao thành công</span>
                        }
                        else
                        {
                            <span>Chờ hoàn thành</span>
                        }
                    </div>
                </div>
            </div>
        </div>
        
        <div style="text-align: center; margin-top: 1.5rem;">
            <span class="status-badge @(GetStatusClass(Model.Status))">
                @GetStatusIcon(Model.Status) @Model.Status
            </span>
        </div>
    </div>

    <!-- Order Information -->
    <div class="order-section">
        <h2 class="section-title">
            <div class="section-icon">
                <i class="fas fa-info-circle"></i>
            </div>
            Thông tin đơn hàng
        </h2>
        
        <div class="order-info-grid">
            <div class="info-card">
                <div class="info-label">Khách hàng</div>
                <div class="info-value">@Model.User?.FullName</div>
            </div>
            
            <div class="info-card">
                <div class="info-label">Ngày đặt hàng</div>
                <div class="info-value">@Model.CreatedAt?.ToString("dd/MM/yyyy HH:mm")</div>
            </div>
            
            <div class="info-card">
                <div class="info-label">Địa chỉ giao hàng</div>
                <div class="info-value">@Model.Address?.FullAddress</div>
            </div>
            
            <div class="info-card">
                <div class="info-label">Phương thức thanh toán</div>
                <div class="info-value">@Model.PaymentMethod?.MethodName</div>
            </div>
            
            @if (!string.IsNullOrEmpty(Model.Voucher?.Code))
            {
                <div class="info-card">
                    <div class="info-label">Mã giảm giá</div>
                    <div class="info-value">@Model.Voucher?.Code</div>
                </div>
            }
        </div>
    </div>

    <!-- Products -->
    <div class="order-section">
        <h2 class="section-title">
            <div class="section-icon">
                <i class="fas fa-shopping-bag"></i>
            </div>
            Sản phẩm đã đặt (@Model.OrderDetails?.Count() sản phẩm)
        </h2>
        
        <ul class="products-list">
            @foreach (var item in Model.OrderDetails)
            {
                <li class="product-item">
                    <div class="product-image">
                        @if (!string.IsNullOrEmpty(item.Product?.ImagePr))
                        {
                            <img src="@item.Product.ImagePr" alt="@item.Product.ProductName" />
                        }
                        else
                        {
                            <i class="fas fa-image"></i>
                        }
                    </div>
                    
                    <div class="product-info">
                        <div class="product-name">@item.Product?.ProductName</div>
                        <div class="product-details">
                            <span><strong>Số lượng:</strong> @item.Quantity</span>
                            <span><strong>Đơn giá:</strong> @item.UnitPrice?.ToString("N0") ₫</span>
                        </div>
                    </div>
                    
                    <div class="product-price">
                        <div class="unit-price">@item.UnitPrice?.ToString("N0") ₫ x @item.Quantity</div>
                        <div class="total-price">@((item.Quantity ?? 0) * (item.UnitPrice ?? 0)).ToString("N0") ₫</div>
                    </div>
                </li>
            }
        </ul>
    </div>

    <!-- Order Summary -->
    <div class="order-section">
        <h2 class="section-title">
            <div class="section-icon">
                <i class="fas fa-calculator"></i>
            </div>
            Tổng kết đơn hàng
        </h2>
        
        <div class="order-summary">
            <div class="summary-row">
                <span class="summary-label">Tổng tiền hàng:</span>
                <span class="summary-value">@Model.TotalAmount?.ToString("N0") ₫</span>
            </div>
            
            @if (Model.TotalAmount != Model.FinalTotal)
            {
                <div class="summary-row">
                    <span class="summary-label">Giảm giá:</span>
                    <span class="summary-value">-@((Model.TotalAmount - Model.FinalTotal)?.ToString("N0")) ₫</span>
                </div>
            }
            
            <div class="summary-row">
                <span class="summary-label">Tổng thanh toán:</span>
                <span class="summary-value">@Model.FinalTotal?.ToString("N0") ₫</span>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetStatusClass(string status)
    {
        return status switch
        {
            "Chờ xác nhận" => "status-pending",
            "Đã xác nhận" => "status-confirmed", 
            "Đang giao" => "status-shipping",
            "Đã giao" => "status-delivered",
            "Đã hủy" => "status-cancelled",
            _ => "status-pending"
        };
    }
    
    public string GetStatusIcon(string status)
    {
        return status switch
        {
            "Chờ xác nhận" => "<i class='fas fa-clock'></i>",
            "Đã xác nhận" => "<i class='fas fa-check'></i>", 
            "Đang giao" => "<i class='fas fa-truck'></i>",
            "Đã giao" => "<i class='fas fa-check-circle'></i>",
            "Đã hủy" => "<i class='fas fa-times-circle'></i>",
            _ => "<i class='fas fa-clock'></i>"
        };
    }
}

