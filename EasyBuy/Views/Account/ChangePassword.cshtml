@model EasyBuy.Models.User
@{
    ViewData["Title"] = "Đổi mật khẩu - EasyBuy";
    Layout = "~/Views/Layout/_LayoutUser.cshtml";
}

@section Scripts {
    <script>
        // Form validation and animations
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('.change-password-form');
            const inputs = form.querySelectorAll('.form-control');

            // Add floating label effect
            inputs.forEach(input => {
                input.addEventListener('focus', function() {
                    this.parentElement.classList.add('focused');
                });

                input.addEventListener('blur', function() {
                    if (!this.value) {
                        this.parentElement.classList.remove('focused');
                    }
                });

                // Check if input has value on load
                if (input.value) {
                    input.parentElement.classList.add('focused');
                }
            });

            // Password visibility toggles
            const passwordToggles = document.querySelectorAll('.password-toggle');
            passwordToggles.forEach(toggle => {
                toggle.addEventListener('click', function() {
                    const passwordInput = this.parentElement.querySelector('input[type="password"], input[type="text"]');
                    const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                    passwordInput.setAttribute('type', type);

                    const icon = this.querySelector('i');
                    icon.classList.toggle('fa-eye');
                    icon.classList.toggle('fa-eye-slash');
                });
            });

            // Password match validation
            const newPassword = document.querySelector('#newpassword');
            const confirmPassword = document.querySelector('#renewpassword');

            function validatePassword() {
                if (newPassword.value && confirmPassword.value) {
                    if (newPassword.value === confirmPassword.value) {
                        confirmPassword.setCustomValidity('');
                        confirmPassword.parentElement.classList.remove('error');
                        confirmPassword.parentElement.classList.add('success');
                    } else {
                        confirmPassword.setCustomValidity('Mật khẩu không khớp');
                        confirmPassword.parentElement.classList.remove('success');
                        confirmPassword.parentElement.classList.add('error');
                    }
                }
            }

            newPassword.addEventListener('input', validatePassword);
            confirmPassword.addEventListener('input', validatePassword);

            // Password strength indicator
            const passwordStrengthIndicator = document.querySelector('#passwordStrength');

            newPassword.addEventListener('input', function() {
                const password = this.value;
                let strength = 0;
                let strengthText = '';
                let strengthClass = '';

                if (password.length >= 8) strength++;
                if (password.match(/[a-z]/)) strength++;
                if (password.match(/[A-Z]/)) strength++;
                if (password.match(/[0-9]/)) strength++;
                if (password.match(/[^a-zA-Z0-9]/)) strength++;

                switch (strength) {
                    case 0:
                    case 1:
                        strengthText = 'Rất yếu';
                        strengthClass = 'very-weak';
                        break;
                    case 2:
                        strengthText = 'Yếu';
                        strengthClass = 'weak';
                        break;
                    case 3:
                        strengthText = 'Trung bình';
                        strengthClass = 'medium';
                        break;
                    case 4:
                        strengthText = 'Mạnh';
                        strengthClass = 'strong';
                        break;
                    case 5:
                        strengthText = 'Rất mạnh';
                        strengthClass = 'very-strong';
                        break;
                }

                passwordStrengthIndicator.textContent = strengthText;
                passwordStrengthIndicator.className = `password-strength ${strengthClass}`;
            });
        });
    </script>

    <style>
        .account-container {
            background: #fafbfc;
            min-height: 100vh;
            padding: 2rem 0;
        }

        .account-header {
            background: white;
            border-radius: var(--border-radius-lg);
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: var(--shadow);
            border: 1px solid var(--border-color);
        }

            .account-header h1 {
                color: var(--dark-color);
                margin-bottom: 0.5rem;
                font-weight: 700;
            }

            .account-header .breadcrumb {
                background: transparent;
                padding: 0;
                margin: 0;
            }

        .account-card {
            background: white;
            border-radius: var(--border-radius-lg);
            box-shadow: var(--shadow);
            border: 1px solid var(--border-color);
            overflow: hidden;
        }

        .card-header-modern {
            background: var(--primary-gradient);
            color: white;
            padding: 1.5rem 2rem;
            border-bottom: none;
        }

            .card-header-modern h3 {
                color: white;
                margin: 0;
                font-weight: 600;
            }

        .card-body-modern {
            padding: 2rem;
        }

        .form-floating-custom {
            position: relative;
            margin-bottom: 1.5rem;
        }

            .form-floating-custom .form-control {
                height: 56px;
                padding: 1rem 3rem 1rem 3rem;
                border: 2px solid var(--border-color);
                border-radius: var(--border-radius);
                font-size: 1rem;
                transition: var(--transition);
                background-color: #fafbfc;
            }

                .form-floating-custom .form-control:focus {
                    border-color: var(--primary-color);
                    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
                    background-color: white;
                }

            .form-floating-custom.success .form-control {
                border-color: var(--success-color);
            }

            .form-floating-custom.error .form-control {
                border-color: var(--danger-color);
            }

            .form-floating-custom .form-icon {
                position: absolute;
                left: 1rem;
                top: 50%;
                transform: translateY(-50%);
                color: var(--text-muted);
                font-size: 1.1rem;
                z-index: 2;
            }

            .form-floating-custom label {
                position: absolute;
                top: 50%;
                left: 3rem;
                transform: translateY(-50%);
                font-size: 1rem;
                color: var(--text-muted);
                pointer-events: none;
                transition: var(--transition);
                background: transparent;
                padding: 0;
            }

            .form-floating-custom.focused label,
            .form-floating-custom .form-control:focus ~ label {
                top: 0;
                left: 0.75rem;
                font-size: 0.75rem;
                color: var(--primary-color);
                background: white;
                padding: 0 0.25rem;
            }

            .form-floating-custom.success.focused label {
                color: var(--success-color);
            }

            .form-floating-custom.error.focused label {
                color: var(--danger-color);
            }

        .password-toggle {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: var(--text-muted);
            cursor: pointer;
            z-index: 2;
        }

            .password-toggle:hover {
                color: var(--primary-color);
            }

        .btn-change-password {
            background: var(--primary-gradient);
            color: white;
            border: none;
            padding: 12px 32px;
            border-radius: var(--border-radius);
            font-weight: 600;
            font-size: 1rem;
            transition: var(--transition);
        }

            .btn-change-password:hover {
                transform: translateY(-2px);
                box-shadow: var(--shadow-lg);
            }

        .alert-modern {
            border: none;
            border-radius: var(--border-radius);
            padding: 1rem;
            margin-bottom: 1.5rem;
            border-left: 4px solid;
        }

        .alert-success {
            background: #d1f2eb;
            color: var(--success-color);
            border-left-color: var(--success-color);
        }

        .alert-danger {
            background: #fee;
            color: var(--danger-color);
            border-left-color: var(--danger-color);
        }

        .security-info {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: var(--border-radius-lg);
            padding: 1.5rem;
            margin-bottom: 2rem;
        }

            .security-info h5 {
                color: var(--dark-color);
                margin-bottom: 1rem;
            }

        .security-tips {
            list-style: none;
            padding: 0;
        }

            .security-tips li {
                display: flex;
                align-items: center;
                padding: 0.5rem 0;
                color: var(--text-muted);
            }

                .security-tips li i {
                    color: var(--success-color);
                    margin-right: 0.5rem;
                    width: 16px;
                }

        .password-strength {
            font-size: 0.8rem;
            margin-top: 0.5rem;
            font-weight: 600;
        }

            .password-strength.very-weak {
                color: #dc3545;
            }

            .password-strength.weak {
                color: #fd7e14;
            }

            .password-strength.medium {
                color: #ffc107;
            }

            .password-strength.strong {
                color: #20c997;
            }

            .password-strength.very-strong {
                color: #198754;
            }

        media (max-width: 768px) {
            .account-header, .card-body-modern

        {
            padding: 1.5rem;
        }

        }
    </style>
}

<div class="account-container">
    <div class="container">
        <!-- Account Header -->
        <div class="account-header">
            <h1><i class="fas fa-key me-2"></i>Đổi mật khẩu</h1>
        </div>

        <div class="row">
            <div class="col-lg-8 mx-auto">
                <!-- Security Tips -->
                <div class="security-info">
                    <h5><i class="fas fa-shield-alt me-2"></i>Bảo mật tài khoản</h5>
                    <ul class="security-tips">
                        <li><i class="fas fa-check"></i>Sử dụng mật khẩu dài ít nhất 8 ký tự</li>
                        <li><i class="fas fa-check"></i>Kết hợp chữ hoa, chữ thường, số và ký tự đặc biệt</li>
                        <li><i class="fas fa-check"></i>Không sử dụng thông tin cá nhân trong mật khẩu</li>
                        <li><i class="fas fa-check"></i>Thay đổi mật khẩu định kỳ</li>
                    </ul>
                </div>

                <div class="account-card">
                    <!-- Card Header -->
                    <div class="card-header-modern">
                        <h3><i class="fas fa-lock me-2"></i>Thay đổi mật khẩu</h3>
                    </div>

                    <!-- Card Body -->
                    <div class="card-body-modern">
                        <!-- Success/Error Messages -->
                        @if (ViewBag.Success != null)
                        {
                            <div class="alert-modern alert-success">
                                <i class="fas fa-check-circle me-2"></i>@ViewBag.Success
                            </div>
                        }

                        @if (ViewBag.Error != null)
                        {
                            <div class="alert-modern alert-danger">
                                <i class="fas fa-exclamation-circle me-2"></i>@ViewBag.Error
                            </div>
                        }

                        <!-- Change Password Form -->
                        @using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { @class = "change-password-form" }))
                        {
                            <!-- Current Password Field -->
                            <div class="form-floating-custom">
                                <i class="form-icon fas fa-lock"></i>
                                <input type="password" class="form-control" id="password" name="password" required />
                                <label for="password">Mật khẩu hiện tại</label>
                                <button type="button" class="password-toggle">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>

                            <!-- New Password Field -->
                            <div class="form-floating-custom">
                                <i class="form-icon fas fa-key"></i>
                                <input type="password" class="form-control" id="newpassword" name="newpassword" required minlength="8" />
                                <label for="newpassword">Mật khẩu mới</label>
                                <button type="button" class="password-toggle">
                                    <i class="fas fa-eye"></i>
                                </button>
                                <div class="password-strength" id="passwordStrength"></div>
                            </div>

                            <!-- Confirm New Password Field -->
                            <div class="form-floating-custom">
                                <i class="form-icon fas fa-key"></i>
                                <input type="password" class="form-control" id="renewpassword" name="renewpassword" required />
                                <label for="renewpassword">Nhập lại mật khẩu mới</label>
                                <button type="button" class="password-toggle">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>

                            <!-- Action Buttons -->
                            <div class="d-flex gap-2 justify-content-end mt-4">
                                <a href="/Account/UpdateAccount" class="btn btn-outline-secondary">
                                    <i class="fas fa-arrow-left me-2"></i>Quay lại
                                </a>
                                <button type="submit" class="btn-change-password">
                                    <i class="fas fa-key me-2"></i>Đổi mật khẩu
                                </button>
                            </div>
                        }
                    </div>
                </div>

                <!-- Quick Actions -->
                <div class="row mt-4">
                    <div class="col-md-6">
                        <div class="card h-100">
                            <div class="card-body text-center">
                                <i class="fas fa-user-edit text-primary fa-2x mb-3"></i>
                                <h5>Cập nhật thông tin</h5>
                                <p class="text-muted">Chỉnh sửa thông tin cá nhân</p>
                                <a href="/Account/UpdateAccount" class="btn btn-outline-primary">
                                    <i class="fas fa-user-edit me-2"></i>Cập nhật
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card h-100">
                            <div class="card-body text-center">
                                <i class="fas fa-shopping-bag text-success fa-2x mb-3"></i>
                                <h5>Đơn hàng của tôi</h5>
                                <p class="text-muted">Xem lịch sử mua hàng</p>
                                <a href="/Order/ListOrder" class="btn btn-outline-success">
                                    <i class="fas fa-shopping-bag me-2"></i>Xem đơn hàng
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div> 